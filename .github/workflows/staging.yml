name: Staging deployment

on:
  push:
    branches:
      - main

env:
  # Must match k8s deployment name
  DEPLOYMENT: works-finder
  DEPLOYMENT_NAMESPACE: works-finder
  DEPLOYMENT_URL: https://works-finder.staging.dataesr.ovh
  MM_NOTIFICATION_CHANNEL: bots

jobs:
  publish-ghcr:
    name: Publish docker image
    runs-on: ubuntu-latest
    steps:
      - name: üèÅ Checkout
        uses: actions/checkout@v4

      - name: üè∑Ô∏è Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: üîë Login Docker
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: üèóÔ∏è Build app
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci --silent && npm run build --mode=staging

      - name: üêã Build Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker build -t $IMAGE_ID:staging -t $IMAGE_ID:latest .

      - name: üì¶ Push Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker push $IMAGE_ID:latest

  deploy:
    name: Update staging deployment
    runs-on: ubuntu-latest
    needs: publish-ghcr
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DOAD_STAGING }}
        with:
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          restart: ${{ env.DEPLOYMENT }}

  notify:
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: dataesr/mm-notifier-action@v1.0.1
        with:
          deployment_url: ${{ env.DEPLOYMENT_URL }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          mattermost_channel: ${{ env.MM_NOTIFICATION_CHANNEL}}
          mattermost_webhook_url: ${{ secrets.MATTERMOST_WEBHOOK_URL }}